{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to KFS","text":""},{"location":"#commands","title":"Commands","text":"<ul> <li><code>make</code> - Compile the project</li> <li><code>make qemu</code> - Compile and run the project</li> <li><code>make clean</code> - Remove the kernel binary.</li> <li><code>make fclean</code> - Remove the kernel binary, iso and all other compilation generated files.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>docs/ # Documentation\n    kfs/\n        docs\niso # ISO configuration files\n    boot/\n        grub/\nsrc/ # Source code\n    arch/\n        x86/\n            boot/\n            mm/\n            system/\n    debug/\n    drivers/\n    kernel/\n        irq/\n        mm/\n        sched/\n        syscalls/\n        time/\n        userspace/\n        utils/\n    mm/\n    userspace/\nuserspace # Zig userspace programs\n    src\nzig-out # Kernel binary output directory\n    bin\n</code></pre>"},{"location":"about/","title":"About","text":""},{"location":"core/","title":"Core","text":""},{"location":"locking/","title":"Locking","text":""},{"location":"signals/","title":"Signals","text":"<p>KFS implements standard POSIX signals. Signals cannot be queued but  while a signal is executing another can arrive and and steal it's execution time if the the currently executing signal is not blocking it.</p> <p>KFS implements the following flags for sigaction</p> <ul> <li>SA_NODEFER   Do not add the signal to the thread's signal mask while the                 handler is executing, unless the signal is specified in                 act.sa_mask</li> <li>SA_RESETHAND   Resets the handler of the signal to default when execution of that handler starts.</li> </ul>"}]}